name: Docs by tag

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc
      - name: Install Go
        run: |
          GO_VERSION=1.22.0
          wget https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin
          go version
      - name: Build documentation
        run: |
          go run . run docs
      - name: Convert Markdown to HTML and update links
        run: |
          for mdfile in docs/*.md; do
            htmlfile="${mdfile%.md}.html"
            pandoc -f markdown "$mdfile" -o "$htmlfile"

            if [ $? -eq 0 ]; then
              # replace .md links to .html
              sed -i 's/href="\(.*\)\.md"/href="\1.html"/g' "$htmlfile"

              echo "Converted $mdfile to $htmlfile"
              rm "$mdfile"
            else
              echo "Failed to convert $mdfile" >&2
              exit 1
            fi
          done
      - name: Reset ownership
        run: sudo chown -R -v $USER:$GROUP docs
      - name: Fix permissions
        run: sudo chmod -R -v 777 docs
      - name: Check docs directory contents
        run: ls -al docs
      - name: Upload directory
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "docs"
          target: ${{ secrets.SSH_SOURCEDIR }}
      - name: Move to target
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo mv -v ${{ secrets.SSH_SOURCEDIR }}/docs/* ${{ secrets.SSH_TARGETDIR }} &>/dev/null
            sudo chown -R ${{ secrets.SERVER_USER }}:${{ secrets.SERVER_GROUP }} ${{ secrets.SSH_TARGETDIR }}/* &>/dev/null
          script_stop: true
